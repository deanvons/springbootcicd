name: Build and Deploy to Azure

on:
  push:
    branches:
      - main  # Runs when pushing to main
  pull_request:
    branches:
      - main  # Runs on PR merges to main

permissions:
  id-token: write  # ✅ Allows GitHub to request an OpenID Connect (OIDC) token
  contents: read   # ✅ Allows GitHub Actions to read the repo contents

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Step 2: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ✅ Step 3: Log in to ACR (Azure Container Registry)
      - name: Log in to ACR
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      # ✅ Step 4: Build and Tag Docker Image (Use v1 instead of latest)
      - name: Build Docker Image
        run: |
          IMAGE_TAG=v1
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/demo-api:$IMAGE_TAG .

      # ✅ Step 5: Push the Docker Image to ACR (Use v1 instead of latest)
      - name: Push Docker Image
        run: |
          IMAGE_TAG=v1
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/demo-api:$IMAGE_TAG

  deploy:
    needs: build-and-push  # Runs after the image is pushed to ACR
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 6: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ✅ Step 7: Deploy to Azure App Service (Use v1 instead of latest)
      - name: Deploy to Azure App Service
        run: |
          az webapp config container set --name ${{ secrets.WEBAPP_NAME }} \
          --resource-group ${{ secrets.RESOURCE_GROUP }} \
          --docker-custom-image-name ${{ secrets.ACR_LOGIN_SERVER }}/demo-api:v1
          
          az webapp restart --name ${{ secrets.WEBAPP_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP }}
